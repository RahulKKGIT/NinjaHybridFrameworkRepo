<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="9" passed="5" failed="4" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2024-04-13T11:08:46 CEST" name="TutorialsNinja Automation Suite" finished-at="2024-04-13T11:09:32 CEST" duration-ms="45988">
    <groups>
    </groups>
    <test started-at="2024-04-13T11:08:46 CEST" name="TutorialsNinja Testcases" finished-at="2024-04-13T11:09:32 CEST" duration-ms="45988">
      <class name="com.tutorialsninja.qa.testcases.RegisterTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@1c7696c6]" started-at="2024-04-13T11:08:46 CEST" name="setUp" finished-at="2024-04-13T11:08:54 CEST" duration-ms="8403" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="registerWithMandatoryFields()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@1c7696c6]" started-at="2024-04-13T11:08:54 CEST" name="registerWithMandatoryFields" finished-at="2024-04-13T11:08:56 CEST" duration-ms="1703" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- registerWithMandatoryFields -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.RegisterTest@1c7696c6]" started-at="2024-04-13T11:08:56 CEST" name="tearDown" finished-at="2024-04-13T11:08:56 CEST" duration-ms="162" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.RegisterTest -->
      <class name="com.tutorialsninja.qa.testcases.SearchTest">
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:19 CEST" name="setup" finished-at="2024-04-13T11:09:23 CEST" duration-ms="3220" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithValidProduct()[pri:1, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:23 CEST" name="verifySearchWithValidProduct" finished-at="2024-04-13T11:09:23 CEST" duration-ms="656" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithValidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:23 CEST" name="tearDown" finished-at="2024-04-13T11:09:24 CEST" duration-ms="187" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:24 CEST" name="setup" finished-at="2024-04-13T11:09:27 CEST" duration-ms="3669" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithInvalidProduct()[pri:2, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:27 CEST" name="verifySearchWithInvalidProduct" finished-at="2024-04-13T11:09:28 CEST" duration-ms="632" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithInvalidProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:28 CEST" name="tearDown" finished-at="2024-04-13T11:09:28 CEST" duration-ms="130" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setup()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:28 CEST" name="setup" finished-at="2024-04-13T11:09:31 CEST" duration-ms="3139" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setup -->
        <test-method signature="verifySearchWithoutAnyProduct()[pri:3, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:31 CEST" name="verifySearchWithoutAnyProduct" finished-at="2024-04-13T11:09:31 CEST" duration-ms="377" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifySearchWithoutAnyProduct -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.SearchTest@74d1dc36]" started-at="2024-04-13T11:09:31 CEST" name="tearDown" finished-at="2024-04-13T11:09:32 CEST" duration-ms="117" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.SearchTest -->
      <class name="com.tutorialsninja.qa.testcases.LoginTest">
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:08:57 CEST" name="setUp" finished-at="2024-04-13T11:09:02 CEST" duration-ms="4931" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:02 CEST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSupplier" finished-at="2024-04-13T11:09:02 CEST" duration-ms="25" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[krishna.test1@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.tutorialsninja.qa.pages.Loginpage.enterEmailAddress(Loginpage.java:29)
at com.tutorialsninja.qa.testcases.LoginTest.verifyLoginWithValidCredentials(LoginTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:02 CEST" name="tearDown" finished-at="2024-04-13T11:09:02 CEST" duration-ms="127" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:02 CEST" name="setUp" finished-at="2024-04-13T11:09:06 CEST" duration-ms="3586" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:06 CEST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSupplier" finished-at="2024-04-13T11:09:06 CEST" duration-ms="23" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[krishna.test2@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.tutorialsninja.qa.pages.Loginpage.enterEmailAddress(Loginpage.java:29)
at com.tutorialsninja.qa.testcases.LoginTest.verifyLoginWithValidCredentials(LoginTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:06 CEST" name="tearDown" finished-at="2024-04-13T11:09:06 CEST" duration-ms="104" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:06 CEST" name="setUp" finished-at="2024-04-13T11:09:10 CEST" duration-ms="3986" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithValidCredentials(java.lang.String,java.lang.String)[pri:1, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:10 CEST" name="verifyLoginWithValidCredentials" data-provider="validCredentialsSupplier" finished-at="2024-04-13T11:09:10 CEST" duration-ms="39" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA[krishna.test3@gmail.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[test1234]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.tutorialsninja.qa.pages.Loginpage.enterEmailAddress(Loginpage.java:29)
at com.tutorialsninja.qa.testcases.LoginTest.verifyLoginWithValidCredentials(LoginTest.java:48)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithValidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:11 CEST" name="tearDown" finished-at="2024-04-13T11:09:11 CEST" duration-ms="179" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:11 CEST" name="setUp" finished-at="2024-04-13T11:09:14 CEST" duration-ms="3691" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithInvalidCredentials()[pri:2, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:14 CEST" name="verifyLoginWithInvalidCredentials" finished-at="2024-04-13T11:09:14 CEST" duration-ms="34" status="FAIL">
          <exception class="java.lang.IllegalArgumentException">
            <message>
              <![CDATA[Keys to send should be a not null CharSequence]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.IllegalArgumentException: Keys to send should be a not null CharSequence
at org.openqa.selenium.remote.RemoteWebElement.sendKeys(RemoteWebElement.java:92)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:51)
at jdk.proxy2/jdk.proxy2.$Proxy15.sendKeys(Unknown Source)
at com.tutorialsninja.qa.pages.Loginpage.enterEmailAddress(Loginpage.java:29)
at com.tutorialsninja.qa.testcases.LoginTest.verifyLoginWithInvalidCredentials(LoginTest.java:70)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:228)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:961)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:201)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at org.testng.TestRunner.privateRun(TestRunner.java:819)
at org.testng.TestRunner.run(TestRunner.java:619)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:443)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:437)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:397)
at org.testng.SuiteRunner.run(SuiteRunner.java:336)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1228)
at org.testng.TestNG.runSuites(TestNG.java:1134)
at org.testng.TestNG.run(TestNG.java:1101)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.IllegalArgumentException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithInvalidCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:15 CEST" name="tearDown" finished-at="2024-04-13T11:09:15 CEST" duration-ms="182" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method is-config="true" signature="setUp()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:15 CEST" name="setUp" finished-at="2024-04-13T11:09:19 CEST" duration-ms="3915" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method signature="verifyLoginWithoutCredentials()[pri:3, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:19 CEST" name="verifyLoginWithoutCredentials" finished-at="2024-04-13T11:09:19 CEST" duration-ms="569" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLoginWithoutCredentials -->
        <test-method is-config="true" signature="tearDown()[pri:0, instance:com.tutorialsninja.qa.testcases.LoginTest@75d3a5e0]" started-at="2024-04-13T11:09:19 CEST" name="tearDown" finished-at="2024-04-13T11:09:19 CEST" duration-ms="137" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- com.tutorialsninja.qa.testcases.LoginTest -->
    </test> <!-- TutorialsNinja Testcases -->
  </suite> <!-- TutorialsNinja Automation Suite -->
</testng-results>
